#Libraries
from sklearn.pipeline import make_pipeline
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
import pandas ad pd

#Select K
ks = range(1, 6)
inertias = []

for k in ks:
    
    model = KMeans(n_clusters=k)
    
    # Fit model to samples
    model.fit(array)
    
    # Append the inertia to the list of inertias
    inertias.append(model.inertia_)
    #Scree plot
plt.plot(ks, inertias, '-o')
plt.xlabel('number of clusters, k')
plt.ylabel('inertia')
plt.xticks(ks)
plt.show()


#Scale
scaler =StandardScaler()

#Instantiate kMeans based on optimal k above
kmeans = KMeans(n_clusters=4)

#Create pipeline
pipeline=make_pipeline(scaler,kmeans)

#Fit pipeline
pipeline.fit(array)


#Assign cluster labels using pipeline
clusters = pipeline.predict(array)


#Alternate approach use Normalizer
